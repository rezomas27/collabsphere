{"ast":null,"code":"var _jsxFileName = \"/Users/sammozer/Desktop/collabsphere/collabsphere-frontend/src/VerifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // Get the token from the URL\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        const response = await axios.get(`/api/users/verify-email/${token}`);\n        if (response.status === 200) {\n          setIsLoading(false);\n          setTimeout(() => {\n            navigate('/login'); // Redirect to login page after 3 seconds\n          }, 3000);\n        }\n      } catch (err) {\n        console.error('Error verifying email:', err);\n        setError('Verification failed. Invalid or expired token.');\n        setIsLoading(false);\n      }\n    };\n    verifyEmail();\n  }, [token, navigate]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Verifying Email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please wait while we verify your email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Verification Failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Verified Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You will be redirected to the login page shortly.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyEmail, \"7qkq+BASSJ5X3yHfCjfBPjYAocY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","VerifyEmail","_s","token","navigate","isLoading","setIsLoading","error","setError","verifyEmail","response","get","status","setTimeout","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sammozer/Desktop/collabsphere/collabsphere-frontend/src/VerifyEmail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst VerifyEmail = () => {\n  const { token } = useParams(); // Get the token from the URL\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        const response = await axios.get(`/api/users/verify-email/${token}`);\n        if (response.status === 200) {\n          setIsLoading(false);\n          setTimeout(() => {\n            navigate('/login'); // Redirect to login page after 3 seconds\n          }, 3000);\n        }\n      } catch (err) {\n        console.error('Error verifying email:', err);\n        setError('Verification failed. Invalid or expired token.');\n        setIsLoading(false);\n      }\n    };\n\n    verifyEmail();\n  }, [token, navigate]);\n\n  if (isLoading) {\n    return (\n      <div>\n        <h2>Verifying Email...</h2>\n        <p>Please wait while we verify your email.</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div>\n        <h2>Verification Failed</h2>\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2>Email Verified Successfully!</h2>\n      <p>You will be redirected to the login page shortly.</p>\n    </div>\n  );\n};\n\nexport default VerifyEmail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,2BAA2BR,KAAK,EAAE,CAAC;QACpE,IAAIO,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BN,YAAY,CAAC,KAAK,CAAC;UACnBO,UAAU,CAAC,MAAM;YACfT,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;UACtB,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC,CAAC,OAAOU,GAAG,EAAE;QACZC,OAAO,CAACR,KAAK,CAAC,wBAAwB,EAAEO,GAAG,CAAC;QAC5CN,QAAQ,CAAC,gDAAgD,CAAC;QAC1DF,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAErB,IAAIC,SAAS,EAAE;IACb,oBACEL,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BpB,OAAA;QAAAgB,QAAA,EAAG;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAEV;EAEA,IAAIb,KAAK,EAAE;IACT,oBACEP,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BpB,OAAA;QAAAgB,QAAA,EAAIT;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEV;EAEA,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCpB,OAAA;MAAAgB,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlDID,WAAW;EAAA,QACGL,SAAS,EACVC,WAAW;AAAA;AAAAwB,EAAA,GAFxBpB,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}