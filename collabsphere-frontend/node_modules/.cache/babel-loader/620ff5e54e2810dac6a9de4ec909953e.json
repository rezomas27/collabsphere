{"ast":null,"code":"var _jsxFileName = \"/Users/sammozer/Desktop/collabsphere/collabsphere-frontend/src/VerifyEmail.js\";\nimport React, { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nconst VerifyEmail = () => {\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        const response = await axios.get(`/api/users/verify-email/${token}`);\n        if (response.status === 200) {\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error verifying email:', error);\n      }\n    };\n    verifyEmail();\n  }, [token, navigate]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Verifying Email...\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Please wait while we verify your email.\"));\n};\nexport default VerifyEmail;","map":{"version":3,"names":["React","useEffect","useParams","useNavigate","axios","VerifyEmail","token","navigate","verifyEmail","response","get","status","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/sammozer/Desktop/collabsphere/collabsphere-frontend/src/VerifyEmail.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst VerifyEmail = () => {\n  const { token } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        const response = await axios.get(`/api/users/verify-email/${token}`);\n        if (response.status === 200) {\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error verifying email:', error);\n      }\n    };\n\n    verifyEmail();\n  }, [token, navigate]);\n\n  return (\n    <div>\n      <h2>Verifying Email...</h2>\n      <p>Please wait while we verify your email.</p>\n    </div>\n  );\n};\n\nexport default VerifyEmail;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,SAAS,CAAC,CAAC;EAC7B,MAAMK,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,2BAA2BJ,KAAK,EAAE,CAAC;QACpE,IAAIG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BJ,QAAQ,CAAC,QAAQ,CAAC;QACpB;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAErB,oBACEP,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oBAAsB,CAAC,eAC3BpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,yCAA0C,CAC1C,CAAC;AAEV,CAAC;AAED,eAAef,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}